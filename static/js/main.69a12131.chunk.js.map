{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/ErrorBoundry.js","components/Scroll.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","name","email","id","className","src","alt","CardList","robots","cardsArray","map","user","i","SearchBox","searchChange","type","placeholder","onChange","ErrorBoundry","state","hasError","error","info","this","setState","children","Component","Scroll","style","overflow","border","height","margin","App","onSearchChange","event","searchField","target","value","fetch","response","json","users","Array","isArray","length","filteredRobots","filter","robot","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"uLAYeA,G,YAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,mCCQCQ,EAbF,SAACC,GACZ,IAAQC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,MAAOC,EAAOH,EAAPG,GACrB,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,UACpD,gCACE,6BAAKL,IACL,4BAAIC,WCQGK,EAdE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACZC,EAAaD,EAAOE,KAAI,SAACC,EAAMC,GACnC,OACE,cAAC,EAAD,CAEET,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHZU,MAOX,OAAO,8BAAMH,KCCAI,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,qBAAKV,UAAU,KAAf,SACE,uBACEA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCaHI,E,kDAnBb,WAAYlB,GAAQ,IAAD,8BACjB,cAAMA,IACDmB,MAAQ,CACXC,UAAU,GAHK,E,qDAOnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG5B,WACE,OAAIG,KAAKJ,MAAMC,SACN,yEAEFG,KAAKvB,MAAMyB,a,GAhBKC,aCeZC,EAfA,SAAC3B,GACd,OACE,qBACE4B,MAAO,CACLC,SAAU,SACVC,OAAQ,kBACRC,OAAQ,QACRC,OAAQ,SALZ,SAQGhC,EAAMyB,YCqCEQ,G,wDAzCb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKX,SAAS,CAAEY,YAAaD,EAAME,OAAOC,SAb1C,EAAKnB,MAAQ,CACXX,OAAQ,GACR4B,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBG,MAAM,8CACH9C,MAAK,SAAC+C,GAAD,OAAcA,EAASC,UAC5BhD,MAAK,SAACiD,GAAD,OAAW,EAAKlB,SAAS,CAAEhB,OAAQkC,S,oBAO7C,WAEE,MAAgCnB,KAAKJ,MAA7BX,EAAR,EAAQA,OAAQ4B,EAAhB,EAAgBA,YAChB,IAAKO,MAAMC,QAAQpC,KAAYA,EAAOqC,OAAQ,OAAO,yCAErD,IAAMC,EAAiBtC,EAAOuC,QAAO,SAACC,GACpC,OAAOA,EAAM/C,KAAKgD,cAAcC,SAASd,EAAYa,kBAGvD,OACE,sBAAK7C,UAAU,KAAf,UACE,6CACA,cAAC,EAAD,CAAWU,aAAcS,KAAKW,iBAC9B,cAAC,EAAD,UACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAU1B,OAAQsC,IADpB,gB,GAjCQpB,cCAlByB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDhE,M","file":"static/js/main.69a12131.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card = (props) => {\r\n  const { name, email, id } = props;\r\n  return (\r\n    <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n      <img src={`https://robohash.org/${id}?200x200`} alt='robot'></img>\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n  const cardsArray = robots.map((user, i) => {\r\n    return (\r\n      <Card\r\n        key={i}\r\n        id={robots[i].id}\r\n        name={robots[i].name}\r\n        email={robots[i].email}\r\n      />\r\n    );\r\n  });\r\n  return <div>{cardsArray}</div>;\r\n};\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n  return (\r\n    <div className='p2'>\r\n      <input\r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        type='search'\r\n        placeholder='search robots'\r\n        onChange={searchChange}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n    };\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError)\r\n      return <h1>I'm sorry, we can't display the results</h1>;\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        overflow: 'scroll',\r\n        border: '2px solid black',\r\n        height: '500px',\r\n        margin: '2em 0',\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchField: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then((response) => response.json())\r\n      .then((users) => this.setState({ robots: users }));\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchField: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    //using destructuring to avoid repeting this.state.. it would be this.state.robots| this.state.searchField\r\n    const { robots, searchField } = this.state;\r\n    if (!Array.isArray(robots) || !robots.length) return <h1>Loading</h1>;\r\n\r\n    const filteredRobots = robots.filter((robot) => {\r\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n    });\r\n\r\n    return (\r\n      <div className='tc'>\r\n        <h1>RoboFriends</h1>\r\n        <SearchBox searchChange={this.onSearchChange} />\r\n        <Scroll>\r\n          <ErrorBoundry>\r\n            <CardList robots={filteredRobots} />;\r\n          </ErrorBoundry>\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\nimport App from './containers/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}